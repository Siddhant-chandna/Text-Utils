{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setmyStyle","btnText","setbtnText","className","style","id","type","onClick","Navbar","props","mode","to","title","about","togglemode","htmlFor","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","ShowAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","Capital","msg","defaultProps","App","setmode","setalert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.681b3c22.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nexport default function About() {\r\n    const [myStyle,setmyStyle] = useState({\r\n        color:'black',\r\n        backgroundColor: 'white'\r\n    })\r\n    const [btnText, setbtnText] = useState(\"Enable Dark Mode\")\r\n    const DarkMode=()=>{\r\n        if(myStyle.color==='black'){\r\n            setmyStyle({\r\n                color:'white',backgroundColor:'black'\r\n            })\r\n            setbtnText(\"Enable Light Mode\")\r\n        }\r\n        else{\r\n            setmyStyle({\r\n                color:'black',backgroundColor:'white'\r\n            })\r\n            setbtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n      <button onClick={DarkMode} type=\"button\" className=\"btn btn-dark my-3\">{btnText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/home\" >Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n       </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\n    Navbar.propTypes={                                                     /* props Types  */\r\n        title: PropTypes.string,\r\n        about: PropTypes.string   \r\n    }\r\n    Navbar.defaultProps={                                                   /* props default */\r\n        title: 'Set Title',\r\n        about: 'Set About'\r\n    }\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUprClick=()=>{\r\n        // console.log(\"text\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.ShowAlert(\"Converted to UpperCase\",\"success\");\r\n        // document.title=\"TextUtils-Clicked UpperCase\";\r\n    }\r\n    const handleLwrClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.ShowAlert(\"Converted to LowerCase\",\"success\");\r\n        // document.title=\"TextUtils-Clicked LowerCase\";\r\n    }\r\n    const handleCpyClick=()=>{\r\n        let text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.ShowAlert(\"Text Copied\",\"info\");\r\n    }\r\n    const handleSpcClick=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.ShowAlert(\"Extra Space Removed\",\"success\");\r\n    }\r\n    const handleClrClick=()=>{\r\n        let newText=\"\";\r\n        setText(newText)\r\n        props.ShowAlert(\"TextArea Cleared\",\"warning\");\r\n    }\r\n    const handleonChange=(event)=>{\r\n        console.log(\"Clicked\");\r\n        setText(event.target.value)\r\n    }\r\n        const [text,setText]=useState(\"\");\r\n    return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='light'?'#011b41':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleonChange} style={{backgroundColor:props.mode==='dark'?'#454344':'white',color: props.mode==='light'?'#011b41':'white'}} id=\"myBox\" rows=\"5\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUprClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLwrClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCpyClick}>Copy</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpcClick}>Clear Extra Spaces</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClrClick}>Clear</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'#011b41':'white'}}>\r\n           <h3>Your Text Summary Is</h3>\r\n           <p>{text.length} Letters and {text.split(\" \").length} Words</p>\r\n           <p>{0.008*text.split(\" \").length} minutes is needed to read the above Text</p>\r\n           <h3>Preview</h3>\r\n           <p>{text}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n       const Capital=(word)=>{\r\n           const lower=word.toLowerCase();\r\n           return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n       }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                           <strong>{Capital(props.alert.type)}</strong> : {props.alert.msg}\r\n                        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const ShowAlert= (message,type)=>{\n        setalert({\n          msg:message,\n          type:type\n        })\n        setTimeout(() =>{\n          setalert(null);\n        },1000);\n  }\n\n  const togglemode= ()=>{\n   if(mode==='dark'){\n    setmode('light');\n    document.body.style.backgroundColor='white';\n    ShowAlert(\"Light mode has been Enabled\",\"success\");\n   }\n   else{\n     setmode('dark');\n     document.body.style.backgroundColor='#011b41';\n     ShowAlert(\"Dark mode has been Enabled\",\"success\");\n   }\n  }\n\n\n                                  // page\n  return (\n    <>\n    <Router>       \n    {/* <Navbar/>                                                        default props will be called  */}\n      <Navbar title=\"TextUtils\" about=\"About\" mode={mode} togglemode={togglemode}/>                     {/* used props  */}\n      <Alert alert={alert}/>\n  \n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/home\">\n             <TextForm ShowAlert={ShowAlert} heading=\"Enter Text in textArea\" mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n             <TextForm ShowAlert={ShowAlert} heading=\"Enter Text in textArea\" mode={mode}/>\n          </Route>\n       </Switch>\n       </div>\n    </Router>\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}